{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","web/js/main.js","main.js","node_modules/mithril/mithril.js","node_modules/vdom-benchmark-base/lib/benchmark.js","node_modules/vdom-benchmark-base/lib/executor.js","node_modules/vdom-benchmark-base/lib/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","renderTree","nodes","children","push","tag","attrs","key","toString","BenchmarkImpl","container","b","this","benchmark","m","NAME","VERSION","prototype","setUp","tearDown","render","update","document","addEventListener","mithril","vdom-benchmark-base",2,"app","window","undefined","initialize","$document","$location","location","$cancelAnimationFrame","cancelAnimationFrame","clearTimeout","$requestAnimationFrame","requestAnimationFrame","setTimeout","match","args","slice","arguments","hasAttrs","type","OBJECT","classAttrName","cell","classes","STRING","parser","exec","id","pair","attrParser","join","ARRAY","attrName","className","build","parentElement","parentTag","parentCache","parentIndex","data","cached","shouldReattach","index","editable","namespace","configs","subtree","cachedType","dataType","offset","end","clear","constructor","len","concat","apply","intact","subArrayCount","DELETION","INSERTION","MOVE","existing","shouldMaintainIdentities","action","guid","j","keysDiffer","cachedCell","dataCell","from","element","createElement","actions","prop","changes","sort","sortChanges","newCached","Array","change","splice","dummy","insertBefore","childNodes","cacheCount","item","$trusted","node","parentNode","indexOf","dataAttrKeys","Object","keys","hasKeys","redraw","strategy","configContext","retain","onunload","FUNCTION","isNew","xmlns","is","createElementNS","setAttributes","contenteditable","value","context","callback","injectHTML","createTextNode","nodeName","voidElements","valueOf","activeElement","innerHTML","nodeType","nodeValue","dataAttrs","cachedAttrs","dataAttr","cachedAttr","autoredraw","rule","style","setAttributeNS","setAttribute","message","removeChild","unload","child","nextSibling","isElement","placeholder","insertAdjacentHTML","object","event","startComputation","endFirstComputation","getCellCacheKey","nodeCache","gettersetter","store","toJSON","root","roots","controllers","modules","view","blank","computePostRedrawHook","lastRedrawId","lastRedrawCallTime","Date","normalizeRoute","route","modes","mode","routeByValue","router","path","routeParams","queryStart","parseQueryString","substr","matcher","RegExp","replace","test","values","decodeURIComponent","routeUnobtrusive","ctrlKey","metaKey","which","preventDefault","returnValue","currentTarget","srcElement","search","toUpperCase","setScroll","hash","scrollTo","buildQueryString","prefix","duplicates","str","valueType","encodeURIComponent","reduce","memo","pairs","split","params","reset","cacheKey","cellCache","propify","promise","initialValue","then","resolve","reject","Deferred","successCallback","failureCallback","finish","state","REJECTED","next","map","deferred","RESOLVED","promiseValue","thennable","notThennableCallback","count","onerror","fire","REJECTING","RESOLVING","self","TypeError","identity","ajax","options","toLowerCase","xhr","XMLHttpRequest","open","method","url","user","password","onreadystatechange","readyState","status","onload","target","serialize","JSON","stringify","setRequestHeader","deserialize","parse","config","maybeXhr","FormData","send","callbackKey","getTime","Math","round","random","script","resp","responseText","error","src","body","appendChild","bindData","xhrOptions","querystring","parameterizeUrl","tokens","html","documentNode","documentElement","replaceChild","forceRecreation","isDocumentRoot","trust","String","topModule","FRAME_BUDGET","isPrevented","currentModule","controller","force","pendingRequests","endComputation","max","withAttr","withAttrCallback","getAttribute","currentRoute","pathname","redirect","defaultRoute","source","listener","attachEvent","href","removeEventListener","detachEvent","oldRoute","queryIndex","currentPath","shouldReplaceHistoryEntry","history","pushState","title","param","sync","synchronizer","pos","resolved","results","outstanding","request","background","isJSONP","extract","unwrap","unwrapSuccess","unwrapError","response","deps","mock","factory","define","amd",3,"Benchmark","running","impl","tests","reportCallback","_runButton","getElementById","_iterationsElement","_reportElement","iterations","parseInt","run","ready","Executor","v","disabled","samples","textContent","start","./executor",4,"cb","iterCb","_currentTest","_currentIter","_renderSamples","_updateSamples","_result","_tasksCount","_iter","iter","bind","finished","progress","iterataions","renderTime","updateTime","performance","now","name",5,"initFromScript","scriptUrl","benchmarkTests","head","initFromParentWindow","parent","version","postMessage","init","qs","p","opener","console","log","testsUrl","nowOffset","timing","navigationStart","./benchmark"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar benchmark = require('vdom-benchmark-base');\nvar m = require('mithril');\n\nvar NAME = 'mithril';\nvar VERSION = '0.1.28';\n\nfunction renderTree(nodes) {\n  var children = [];\n  var i;\n  var e;\n  var n;\n\n  for (i = 0; i < nodes.length; i++) {\n    n = nodes[i];\n    if (n.children !== null) {\n      children.push({tag: 'div', attrs: {key: n.key}, children: renderTree(n.children)});\n    } else {\n      children.push({tag: 'span', attrs: {key: n.key}, children: n.key.toString()});\n    }\n  }\n\n  return children;\n}\n\nfunction BenchmarkImpl(container, a, b) {\n  this.container = container;\n  this.a = a;\n  this.b = b;\n}\n\nBenchmarkImpl.prototype.setUp = function() {\n};\n\nBenchmarkImpl.prototype.tearDown = function() {\n  m.render(this.container, '', true);\n};\n\nBenchmarkImpl.prototype.render = function() {\n  m.render(this.container, {tag: 'div', children: renderTree(this.a)});\n};\n\nBenchmarkImpl.prototype.update = function() {\n  m.render(this.container, {tag: 'div', children: renderTree(this.b)});\n};\n\ndocument.addEventListener('DOMContentLoaded', function(e) {\n  benchmark(NAME, VERSION, BenchmarkImpl);\n}, false);\n",null,"var m = (function app(window, undefined) {\r\n\tvar OBJECT = \"[object Object]\", ARRAY = \"[object Array]\", STRING = \"[object String]\", FUNCTION = \"function\";\r\n\tvar type = {}.toString;\r\n\tvar parser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[.+?\\])/g, attrParser = /\\[(.+?)(?:=(\"|'|)(.*?)\\2)?\\]/;\r\n\tvar voidElements = /^(AREA|BASE|BR|COL|COMMAND|EMBED|HR|IMG|INPUT|KEYGEN|LINK|META|PARAM|SOURCE|TRACK|WBR)$/;\r\n\r\n\t// caching commonly used variables\r\n\tvar $document, $location, $requestAnimationFrame, $cancelAnimationFrame;\r\n\r\n\t// self invoking function needed because of the way mocks work\r\n\tfunction initialize(window){\r\n\t\t$document = window.document;\r\n\t\t$location = window.location;\r\n\t\t$cancelAnimationFrame = window.cancelAnimationFrame || window.clearTimeout;\r\n\t\t$requestAnimationFrame = window.requestAnimationFrame || window.setTimeout;\r\n\t}\r\n\r\n\tinitialize(window);\r\n\r\n\r\n\t/**\r\n\t * @typedef {String} Tag\r\n\t * A string that looks like -> div.classname#id[param=one][param2=two]\r\n\t * Which describes a DOM node\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Tag} The DOM node tag\r\n\t * @param {Object=[]} optional key-value pairs to be mapped to DOM attrs\r\n\t * @param {...mNode=[]} Zero or more Mithril child nodes. Can be an array, or splat (optional)\r\n\t *\r\n\t */\r\n\tfunction m() {\r\n\t\tvar args = [].slice.call(arguments);\r\n\t\tvar hasAttrs = args[1] != null && type.call(args[1]) === OBJECT && !(\"tag\" in args[1]) && !(\"subtree\" in args[1]);\r\n\t\tvar attrs = hasAttrs ? args[1] : {};\r\n\t\tvar classAttrName = \"class\" in attrs ? \"class\" : \"className\";\r\n\t\tvar cell = {tag: \"div\", attrs: {}};\r\n\t\tvar match, classes = [];\r\n\t\tif (type.call(args[0]) != STRING) throw new Error(\"selector in m(selector, attrs, children) should be a string\")\r\n\t\twhile (match = parser.exec(args[0])) {\r\n\t\t\tif (match[1] === \"\" && match[2]) cell.tag = match[2];\r\n\t\t\telse if (match[1] === \"#\") cell.attrs.id = match[2];\r\n\t\t\telse if (match[1] === \".\") classes.push(match[2]);\r\n\t\t\telse if (match[3][0] === \"[\") {\r\n\t\t\t\tvar pair = attrParser.exec(match[3]);\r\n\t\t\t\tcell.attrs[pair[1]] = pair[3] || (pair[2] ? \"\" :true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (classes.length > 0) cell.attrs[classAttrName] = classes.join(\" \");\r\n\r\n\r\n\t\tvar children = hasAttrs ? args.slice(2) : args.slice(1);\r\n\t\tif (children.length === 1 && type.call(children[0]) === ARRAY) {\r\n\t\t\tcell.children = children[0]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcell.children = children\r\n\t\t}\r\n\r\n\t\tfor (var attrName in attrs) {\r\n\t\t\tif (attrName === classAttrName) {\r\n\t\t\t\tvar className = cell.attrs[attrName]\r\n\t\t\t\tcell.attrs[attrName] = (className && attrs[attrName] ? className + \" \" : className || \"\") + attrs[attrName];\r\n\t\t\t}\r\n\t\t\telse cell.attrs[attrName] = attrs[attrName]\r\n\t\t}\r\n\t\treturn cell\r\n\t}\r\n\tfunction build(parentElement, parentTag, parentCache, parentIndex, data, cached, shouldReattach, index, editable, namespace, configs) {\r\n\t\t//`build` is a recursive function that manages creation/diffing/removal of DOM elements based on comparison between `data` and `cached`\r\n\t\t//the diff algorithm can be summarized as this:\r\n\t\t//1 - compare `data` and `cached`\r\n\t\t//2 - if they are different, copy `data` to `cached` and update the DOM based on what the difference is\r\n\t\t//3 - recursively apply this algorithm for every array and for the children of every virtual element\r\n\r\n\t\t//the `cached` data structure is essentially the same as the previous redraw's `data` data structure, with a few additions:\r\n\t\t//- `cached` always has a property called `nodes`, which is a list of DOM elements that correspond to the data represented by the respective virtual element\r\n\t\t//- in order to support attaching `nodes` as a property of `cached`, `cached` is *always* a non-primitive object, i.e. if the data was a string, then cached is a String instance. If data was `null` or `undefined`, cached is `new String(\"\")`\r\n\t\t//- `cached also has a `configContext` property, which is the state storage object exposed by config(element, isInitialized, context)\r\n\t\t//- when `cached` is an Object, it represents a virtual element; when it's an Array, it represents a list of elements; when it's a String, Number or Boolean, it represents a text node\r\n\r\n\t\t//`parentElement` is a DOM element used for W3C DOM API calls\r\n\t\t//`parentTag` is only used for handling a corner case for textarea values\r\n\t\t//`parentCache` is used to remove nodes in some multi-node cases\r\n\t\t//`parentIndex` and `index` are used to figure out the offset of nodes. They're artifacts from before arrays started being flattened and are likely refactorable\r\n\t\t//`data` and `cached` are, respectively, the new and old nodes being diffed\r\n\t\t//`shouldReattach` is a flag indicating whether a parent node was recreated (if so, and if this node is reused, then this node must reattach itself to the new parent)\r\n\t\t//`editable` is a flag that indicates whether an ancestor is contenteditable\r\n\t\t//`namespace` indicates the closest HTML namespace as it cascades down from an ancestor\r\n\t\t//`configs` is a list of config functions to run after the topmost `build` call finishes running\r\n\r\n\t\t//there's logic that relies on the assumption that null and undefined data are equivalent to empty strings\r\n\t\t//- this prevents lifecycle surprises from procedural helpers that mix implicit and explicit return statements (e.g. function foo() {if (cond) return m(\"div\")}\r\n\t\t//- it simplifies diffing code\r\n\t\t//data.toString() is null if data is the return value of Console.log in Firefox\r\n\t\ttry {if (data == null || data.toString() == null) data = \"\";} catch (e) {data = \"\"}\r\n\t\tif (data.subtree === \"retain\") return cached;\r\n\t\tvar cachedType = type.call(cached), dataType = type.call(data);\r\n\t\tif (cached == null || cachedType !== dataType) {\r\n\t\t\tif (cached != null) {\r\n\t\t\t\tif (parentCache && parentCache.nodes) {\r\n\t\t\t\t\tvar offset = index - parentIndex;\r\n\t\t\t\t\tvar end = offset + (dataType === ARRAY ? data : cached.nodes).length;\r\n\t\t\t\t\tclear(parentCache.nodes.slice(offset, end), parentCache.slice(offset, end))\r\n\t\t\t\t}\r\n\t\t\t\telse if (cached.nodes) clear(cached.nodes, cached)\r\n\t\t\t}\r\n\t\t\tcached = new data.constructor;\r\n\t\t\tif (cached.tag) cached = {}; //if constructor creates a virtual dom element, use a blank object as the base cached node instead of copying the virtual el (#277)\r\n\t\t\tcached.nodes = []\r\n\t\t}\r\n\r\n\t\tif (dataType === ARRAY) {\r\n\t\t\t//recursively flatten array\r\n\t\t\tfor (var i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\tif (type.call(data[i]) === ARRAY) {\r\n\t\t\t\t\tdata = data.concat.apply([], data);\r\n\t\t\t\t\ti-- //check current index again and flatten until there are no more nested arrays at that index\r\n\t\t\t\t\tlen = data.length\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar nodes = [], intact = cached.length === data.length, subArrayCount = 0;\r\n\r\n\t\t\t//keys algorithm: sort elements without recreating them if keys are present\r\n\t\t\t//1) create a map of all existing keys, and mark all for deletion\r\n\t\t\t//2) add new keys to map and mark them for addition\r\n\t\t\t//3) if key exists in new list, change action from deletion to a move\r\n\t\t\t//4) for each key, handle its corresponding action as marked in previous steps\r\n\t\t\tvar DELETION = 1, INSERTION = 2 , MOVE = 3;\r\n\t\t\tvar existing = {}, unkeyed = [], shouldMaintainIdentities = false;\r\n\t\t\tfor (var i = 0; i < cached.length; i++) {\r\n\t\t\t\tif (cached[i] && cached[i].attrs && cached[i].attrs.key != null) {\r\n\t\t\t\t\tshouldMaintainIdentities = true;\r\n\t\t\t\t\texisting[cached[i].attrs.key] = {action: DELETION, index: i}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar guid = 0\r\n\t\t\tfor (var i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\tif (data[i] && data[i].attrs && data[i].attrs.key != null) {\r\n\t\t\t\t\tfor (var j = 0, len = data.length; j < len; j++) {\r\n\t\t\t\t\t\tif (data[j] && data[j].attrs && data[j].attrs.key == null) data[j].attrs.key = \"__mithril__\" + guid++\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (shouldMaintainIdentities) {\r\n\t\t\t\tvar keysDiffer = false\r\n\t\t\t\tif (data.length != cached.length) keysDiffer = true\r\n\t\t\t\telse for (var i = 0, cachedCell, dataCell; cachedCell = cached[i], dataCell = data[i]; i++) {\r\n\t\t\t\t\tif (cachedCell.attrs && dataCell.attrs && cachedCell.attrs.key != dataCell.attrs.key) {\r\n\t\t\t\t\t\tkeysDiffer = true\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (keysDiffer) {\r\n\t\t\t\t\tfor (var i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\t\t\tif (data[i] && data[i].attrs) {\r\n\t\t\t\t\t\t\tif (data[i].attrs.key != null) {\r\n\t\t\t\t\t\t\t\tvar key = data[i].attrs.key;\r\n\t\t\t\t\t\t\t\tif (!existing[key]) existing[key] = {action: INSERTION, index: i};\r\n\t\t\t\t\t\t\t\telse existing[key] = {\r\n\t\t\t\t\t\t\t\t\taction: MOVE,\r\n\t\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\t\tfrom: existing[key].index,\r\n\t\t\t\t\t\t\t\t\telement: cached.nodes[existing[key].index] || $document.createElement(\"div\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar actions = []\r\n\t\t\t\t\tfor (var prop in existing) actions.push(existing[prop])\r\n\t\t\t\t\tvar changes = actions.sort(sortChanges);\r\n\t\t\t\t\tvar newCached = new Array(cached.length)\r\n\t\t\t\t\tnewCached.nodes = cached.nodes.slice()\r\n\r\n\t\t\t\t\tfor (var i = 0, change; change = changes[i]; i++) {\r\n\t\t\t\t\t\tif (change.action === DELETION) {\r\n\t\t\t\t\t\t\tclear(cached[change.index].nodes, cached[change.index]);\r\n\t\t\t\t\t\t\tnewCached.splice(change.index, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.action === INSERTION) {\r\n\t\t\t\t\t\t\tvar dummy = $document.createElement(\"div\");\r\n\t\t\t\t\t\t\tdummy.key = data[change.index].attrs.key;\r\n\t\t\t\t\t\t\tparentElement.insertBefore(dummy, parentElement.childNodes[change.index] || null);\r\n\t\t\t\t\t\t\tnewCached.splice(change.index, 0, {attrs: {key: data[change.index].attrs.key}, nodes: [dummy]})\r\n\t\t\t\t\t\t\tnewCached.nodes[change.index] = dummy\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (change.action === MOVE) {\r\n\t\t\t\t\t\t\tif (parentElement.childNodes[change.index] !== change.element && change.element !== null) {\r\n\t\t\t\t\t\t\t\tparentElement.insertBefore(change.element, parentElement.childNodes[change.index] || null)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnewCached[change.index] = cached[change.from]\r\n\t\t\t\t\t\t\tnewCached.nodes[change.index] = change.element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcached = newCached;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//end key algorithm\r\n\r\n\t\t\tfor (var i = 0, cacheCount = 0, len = data.length; i < len; i++) {\r\n\t\t\t\t//diff each item in the array\r\n\t\t\t\tvar item = build(parentElement, parentTag, cached, index, data[i], cached[cacheCount], shouldReattach, index + subArrayCount || subArrayCount, editable, namespace, configs);\r\n\t\t\t\tif (item === undefined) continue;\r\n\t\t\t\tif (!item.nodes.intact) intact = false;\r\n\t\t\t\tif (item.$trusted) {\r\n\t\t\t\t\t//fix offset of next element if item was a trusted string w/ more than one html element\r\n\t\t\t\t\t//the first clause in the regexp matches elements\r\n\t\t\t\t\t//the second clause (after the pipe) matches text nodes\r\n\t\t\t\t\tsubArrayCount += (item.match(/<[^\\/]|\\>\\s*[^<]/g) || [0]).length\r\n\t\t\t\t}\r\n\t\t\t\telse subArrayCount += type.call(item) === ARRAY ? item.length : 1;\r\n\t\t\t\tcached[cacheCount++] = item\r\n\t\t\t}\r\n\t\t\tif (!intact) {\r\n\t\t\t\t//diff the array itself\r\n\t\t\t\t\r\n\t\t\t\t//update the list of DOM nodes by collecting the nodes from each item\r\n\t\t\t\tfor (var i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\t\tif (cached[i] != null) nodes.push.apply(nodes, cached[i].nodes)\r\n\t\t\t\t}\r\n\t\t\t\t//remove items from the end of the array if the new array is shorter than the old one\r\n\t\t\t\t//if errors ever happen here, the issue is most likely a bug in the construction of the `cached` data structure somewhere earlier in the program\r\n\t\t\t\tfor (var i = 0, node; node = cached.nodes[i]; i++) {\r\n\t\t\t\t\tif (node.parentNode != null && nodes.indexOf(node) < 0) clear([node], [cached[i]])\r\n\t\t\t\t}\r\n\t\t\t\tif (data.length < cached.length) cached.length = data.length;\r\n\t\t\t\tcached.nodes = nodes\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (data != null && dataType === OBJECT) {\r\n\t\t\tif (!data.attrs) data.attrs = {};\r\n\t\t\tif (!cached.attrs) cached.attrs = {};\r\n\r\n\t\t\tvar dataAttrKeys = Object.keys(data.attrs)\r\n\t\t\tvar hasKeys = dataAttrKeys.length > (\"key\" in data.attrs ? 1 : 0)\r\n\t\t\t//if an element is different enough from the one in cache, recreate it\r\n\t\t\tif (data.tag != cached.tag || dataAttrKeys.join() != Object.keys(cached.attrs).join() || data.attrs.id != cached.attrs.id || (m.redraw.strategy() == \"all\" && cached.configContext && cached.configContext.retain !== true) || (m.redraw.strategy() == \"diff\" && cached.configContext && cached.configContext.retain === false)) {\r\n\t\t\t\tif (cached.nodes.length) clear(cached.nodes);\r\n\t\t\t\tif (cached.configContext && typeof cached.configContext.onunload === FUNCTION) cached.configContext.onunload()\r\n\t\t\t}\r\n\t\t\tif (type.call(data.tag) != STRING) return;\r\n\r\n\t\t\tvar node, isNew = cached.nodes.length === 0;\r\n\t\t\tif (data.attrs.xmlns) namespace = data.attrs.xmlns;\r\n\t\t\telse if (data.tag === \"svg\") namespace = \"http://www.w3.org/2000/svg\";\r\n\t\t\telse if (data.tag === \"math\") namespace = \"http://www.w3.org/1998/Math/MathML\";\r\n\t\t\tif (isNew) {\r\n\t\t\t\tif (data.attrs.is) node = namespace === undefined ? $document.createElement(data.tag, data.attrs.is) : $document.createElementNS(namespace, data.tag, data.attrs.is);\r\n\t\t\t\telse node = namespace === undefined ? $document.createElement(data.tag) : $document.createElementNS(namespace, data.tag);\r\n\t\t\t\tcached = {\r\n\t\t\t\t\ttag: data.tag,\r\n\t\t\t\t\t//set attributes first, then create children\r\n\t\t\t\t\tattrs: hasKeys ? setAttributes(node, data.tag, data.attrs, {}, namespace) : data.attrs,\r\n\t\t\t\t\tchildren: data.children != null && data.children.length > 0 ?\r\n\t\t\t\t\t\tbuild(node, data.tag, undefined, undefined, data.children, cached.children, true, 0, data.attrs.contenteditable ? node : editable, namespace, configs) :\r\n\t\t\t\t\t\tdata.children,\r\n\t\t\t\t\tnodes: [node]\r\n\t\t\t\t};\r\n\t\t\t\tif (cached.children && !cached.children.nodes) cached.children.nodes = [];\r\n\t\t\t\t//edge case: setting value on <select> doesn't work before children exist, so set it again after children have been created\r\n\t\t\t\tif (data.tag === \"select\" && data.attrs.value) setAttributes(node, data.tag, {value: data.attrs.value}, {}, namespace);\r\n\t\t\t\tparentElement.insertBefore(node, parentElement.childNodes[index] || null)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode = cached.nodes[0];\r\n\t\t\t\tif (hasKeys) setAttributes(node, data.tag, data.attrs, cached.attrs, namespace);\r\n\t\t\t\tcached.children = build(node, data.tag, undefined, undefined, data.children, cached.children, false, 0, data.attrs.contenteditable ? node : editable, namespace, configs);\r\n\t\t\t\tcached.nodes.intact = true;\r\n\t\t\t\tif (shouldReattach === true && node != null) parentElement.insertBefore(node, parentElement.childNodes[index] || null)\r\n\t\t\t}\r\n\t\t\t//schedule configs to be called. They are called after `build` finishes running\r\n\t\t\tif (typeof data.attrs[\"config\"] === FUNCTION) {\r\n\t\t\t\tvar context = cached.configContext = cached.configContext || {retain: (m.redraw.strategy() == \"diff\") || undefined};\r\n\r\n\t\t\t\t// bind\r\n\t\t\t\tvar callback = function(data, args) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\treturn data.attrs[\"config\"].apply(data, args)\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconfigs.push(callback(data, [node, !isNew, context, cached]))\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof data != FUNCTION) {\r\n\t\t\t//handle text nodes\r\n\t\t\tvar nodes;\r\n\t\t\tif (cached.nodes.length === 0) {\r\n\t\t\t\tif (data.$trusted) {\r\n\t\t\t\t\tnodes = injectHTML(parentElement, index, data)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnodes = [$document.createTextNode(data)];\r\n\t\t\t\t\tif (!parentElement.nodeName.match(voidElements)) parentElement.insertBefore(nodes[0], parentElement.childNodes[index] || null)\r\n\t\t\t\t}\r\n\t\t\t\tcached = \"string number boolean\".indexOf(typeof data) > -1 ? new data.constructor(data) : data;\r\n\t\t\t\tcached.nodes = nodes\r\n\t\t\t}\r\n\t\t\telse if (cached.valueOf() !== data.valueOf() || shouldReattach === true) {\r\n\t\t\t\tnodes = cached.nodes;\r\n\t\t\t\tif (!editable || editable !== $document.activeElement) {\r\n\t\t\t\t\tif (data.$trusted) {\r\n\t\t\t\t\t\tclear(nodes, cached);\r\n\t\t\t\t\t\tnodes = injectHTML(parentElement, index, data)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t//corner case: replacing the nodeValue of a text node that is a child of a textarea/contenteditable doesn't work\r\n\t\t\t\t\t\t//we need to update the value property of the parent textarea or the innerHTML of the contenteditable element instead\r\n\t\t\t\t\t\tif (parentTag === \"textarea\") parentElement.value = data;\r\n\t\t\t\t\t\telse if (editable) editable.innerHTML = data;\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (nodes[0].nodeType === 1 || nodes.length > 1) { //was a trusted string\r\n\t\t\t\t\t\t\t\tclear(cached.nodes, cached);\r\n\t\t\t\t\t\t\t\tnodes = [$document.createTextNode(data)]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparentElement.insertBefore(nodes[0], parentElement.childNodes[index] || null);\r\n\t\t\t\t\t\t\tnodes[0].nodeValue = data\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcached = new data.constructor(data);\r\n\t\t\t\tcached.nodes = nodes\r\n\t\t\t}\r\n\t\t\telse cached.nodes.intact = true\r\n\t\t}\r\n\r\n\t\treturn cached\r\n\t}\r\n\tfunction sortChanges(a, b) {return a.action - b.action || a.index - b.index}\r\n\tfunction setAttributes(node, tag, dataAttrs, cachedAttrs, namespace) {\r\n\t\tfor (var attrName in dataAttrs) {\r\n\t\t\tvar dataAttr = dataAttrs[attrName];\r\n\t\t\tvar cachedAttr = cachedAttrs[attrName];\r\n\t\t\tif (!(attrName in cachedAttrs) || (cachedAttr !== dataAttr)) {\r\n\t\t\t\tcachedAttrs[attrName] = dataAttr;\r\n\t\t\t\ttry {\r\n\t\t\t\t\t//`config` isn't a real attributes, so ignore it\r\n\t\t\t\t\tif (attrName === \"config\" || attrName == \"key\") continue;\r\n\t\t\t\t\t//hook event handlers to the auto-redrawing system\r\n\t\t\t\t\telse if (typeof dataAttr === FUNCTION && attrName.indexOf(\"on\") === 0) {\r\n\t\t\t\t\t\tnode[attrName] = autoredraw(dataAttr, node)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//handle `style: {...}`\r\n\t\t\t\t\telse if (attrName === \"style\" && dataAttr != null && type.call(dataAttr) === OBJECT) {\r\n\t\t\t\t\t\tfor (var rule in dataAttr) {\r\n\t\t\t\t\t\t\tif (cachedAttr == null || cachedAttr[rule] !== dataAttr[rule]) node.style[rule] = dataAttr[rule]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (var rule in cachedAttr) {\r\n\t\t\t\t\t\t\tif (!(rule in dataAttr)) node.style[rule] = \"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//handle SVG\r\n\t\t\t\t\telse if (namespace != null) {\r\n\t\t\t\t\t\tif (attrName === \"href\") node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", dataAttr);\r\n\t\t\t\t\t\telse if (attrName === \"className\") node.setAttribute(\"class\", dataAttr);\r\n\t\t\t\t\t\telse node.setAttribute(attrName, dataAttr)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//handle cases that are properties (but ignore cases where we should use setAttribute instead)\r\n\t\t\t\t\t//- list and form are typically used as strings, but are DOM element references in js\r\n\t\t\t\t\t//- when using CSS selectors (e.g. `m(\"[style='']\")`), style is used as a string, but it's an object in js\r\n\t\t\t\t\telse if (attrName in node && !(attrName === \"list\" || attrName === \"style\" || attrName === \"form\" || attrName === \"type\" || attrName === \"width\" || attrName === \"height\")) {\r\n\t\t\t\t\t\t//#348 don't set the value if not needed otherwise cursor placement breaks in Chrome\r\n\t\t\t\t\t\tif (tag !== \"input\" || node[attrName] !== dataAttr) node[attrName] = dataAttr\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse node.setAttribute(attrName, dataAttr)\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t//swallow IE's invalid argument errors to mimic HTML's fallback-to-doing-nothing-on-invalid-attributes behavior\r\n\t\t\t\t\tif (e.message.indexOf(\"Invalid argument\") < 0) throw e\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//#348 dataAttr may not be a string, so use loose comparison (double equal) instead of strict (triple equal)\r\n\t\t\telse if (attrName === \"value\" && tag === \"input\" && node.value != dataAttr) {\r\n\t\t\t\tnode.value = dataAttr\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cachedAttrs\r\n\t}\r\n\tfunction clear(nodes, cached) {\r\n\t\tfor (var i = nodes.length - 1; i > -1; i--) {\r\n\t\t\tif (nodes[i] && nodes[i].parentNode) {\r\n\t\t\t\ttry {nodes[i].parentNode.removeChild(nodes[i])}\r\n\t\t\t\tcatch (e) {} //ignore if this fails due to order of events (see http://stackoverflow.com/questions/21926083/failed-to-execute-removechild-on-node)\r\n\t\t\t\tcached = [].concat(cached);\r\n\t\t\t\tif (cached[i]) unload(cached[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (nodes.length != 0) nodes.length = 0\r\n\t}\r\n\tfunction unload(cached) {\r\n\t\tif (cached.configContext && typeof cached.configContext.onunload === FUNCTION) {\r\n\t\t\tcached.configContext.onunload();\r\n\t\t\tcached.configContext.onunload = null\r\n\t\t}\r\n\t\tif (cached.children) {\r\n\t\t\tif (type.call(cached.children) === ARRAY) {\r\n\t\t\t\tfor (var i = 0, child; child = cached.children[i]; i++) unload(child)\r\n\t\t\t}\r\n\t\t\telse if (cached.children.tag) unload(cached.children)\r\n\t\t}\r\n\t}\r\n\tfunction injectHTML(parentElement, index, data) {\r\n\t\tvar nextSibling = parentElement.childNodes[index];\r\n\t\tif (nextSibling) {\r\n\t\t\tvar isElement = nextSibling.nodeType != 1;\r\n\t\t\tvar placeholder = $document.createElement(\"span\");\r\n\t\t\tif (isElement) {\r\n\t\t\t\tparentElement.insertBefore(placeholder, nextSibling || null);\r\n\t\t\t\tplaceholder.insertAdjacentHTML(\"beforebegin\", data);\r\n\t\t\t\tparentElement.removeChild(placeholder)\r\n\t\t\t}\r\n\t\t\telse nextSibling.insertAdjacentHTML(\"beforebegin\", data)\r\n\t\t}\r\n\t\telse parentElement.insertAdjacentHTML(\"beforeend\", data);\r\n\t\tvar nodes = [];\r\n\t\twhile (parentElement.childNodes[index] !== nextSibling) {\r\n\t\t\tnodes.push(parentElement.childNodes[index]);\r\n\t\t\tindex++\r\n\t\t}\r\n\t\treturn nodes\r\n\t}\r\n\tfunction autoredraw(callback, object) {\r\n\t\treturn function(e) {\r\n\t\t\te = e || event;\r\n\t\t\tm.redraw.strategy(\"diff\");\r\n\t\t\tm.startComputation();\r\n\t\t\ttry {return callback.call(object, e)}\r\n\t\t\tfinally {\r\n\t\t\t\tendFirstComputation()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar html;\r\n\tvar documentNode = {\r\n\t\tappendChild: function(node) {\r\n\t\t\tif (html === undefined) html = $document.createElement(\"html\");\r\n\t\t\tif ($document.documentElement && $document.documentElement !== node) {\r\n\t\t\t\t$document.replaceChild(node, $document.documentElement)\r\n\t\t\t}\r\n\t\t\telse $document.appendChild(node);\r\n\t\t\tthis.childNodes = $document.childNodes\r\n\t\t},\r\n\t\tinsertBefore: function(node) {\r\n\t\t\tthis.appendChild(node)\r\n\t\t},\r\n\t\tchildNodes: []\r\n\t};\r\n\tvar nodeCache = [], cellCache = {};\r\n\tm.render = function(root, cell, forceRecreation) {\r\n\t\tvar configs = [];\r\n\t\tif (!root) throw new Error(\"Please ensure the DOM element exists before rendering a template into it.\");\r\n\t\tvar id = getCellCacheKey(root);\r\n\t\tvar isDocumentRoot = root === $document;\r\n\t\tvar node = isDocumentRoot || root === $document.documentElement ? documentNode : root;\r\n\t\tif (isDocumentRoot && cell.tag != \"html\") cell = {tag: \"html\", attrs: {}, children: cell};\r\n\t\tif (cellCache[id] === undefined) clear(node.childNodes);\r\n\t\tif (forceRecreation === true) reset(root);\r\n\t\tcellCache[id] = build(node, null, undefined, undefined, cell, cellCache[id], false, 0, null, undefined, configs);\r\n\t\tfor (var i = 0, len = configs.length; i < len; i++) configs[i]()\r\n\t};\r\n\tfunction getCellCacheKey(element) {\r\n\t\tvar index = nodeCache.indexOf(element);\r\n\t\treturn index < 0 ? nodeCache.push(element) - 1 : index\r\n\t}\r\n\r\n\tm.trust = function(value) {\r\n\t\tvalue = new String(value);\r\n\t\tvalue.$trusted = true;\r\n\t\treturn value\r\n\t};\r\n\r\n\tfunction gettersetter(store) {\r\n\t\tvar prop = function() {\r\n\t\t\tif (arguments.length) store = arguments[0];\r\n\t\t\treturn store\r\n\t\t};\r\n\r\n\t\tprop.toJSON = function() {\r\n\t\t\treturn store\r\n\t\t};\r\n\r\n\t\treturn prop\r\n\t}\r\n\r\n\tm.prop = function (store) {\r\n\t\t//note: using non-strict equality check here because we're checking if store is null OR undefined\r\n\t\tif (((store != null && type.call(store) === OBJECT) || typeof store === FUNCTION) && typeof store.then === FUNCTION) {\r\n\t\t\treturn propify(store)\r\n\t\t}\r\n\r\n\t\treturn gettersetter(store)\r\n\t};\r\n\r\n\tvar roots = [], modules = [], controllers = [], lastRedrawId = null, lastRedrawCallTime = 0, computePostRedrawHook = null, prevented = false, topModule;\r\n\tvar FRAME_BUDGET = 16; //60 frames per second = 1 call per 16 ms\r\n\tm.module = function(root, module) {\r\n\t\tif (!root) throw new Error(\"Please ensure the DOM element exists before rendering a template into it.\");\r\n\t\tvar index = roots.indexOf(root);\r\n\t\tif (index < 0) index = roots.length;\r\n\t\tvar isPrevented = false;\r\n\t\tif (controllers[index] && typeof controllers[index].onunload === FUNCTION) {\r\n\t\t\tvar event = {\r\n\t\t\t\tpreventDefault: function() {isPrevented = true}\r\n\t\t\t};\r\n\t\t\tcontrollers[index].onunload(event)\r\n\t\t}\r\n\t\tif (!isPrevented) {\r\n\t\t\tm.redraw.strategy(\"all\");\r\n\t\t\tm.startComputation();\r\n\t\t\troots[index] = root;\r\n\t\t\tvar currentModule = topModule = module = module || {};\r\n\t\t\tvar controller = new (module.controller || function() {});\r\n\t\t\t//controllers may call m.module recursively (via m.route redirects, for example)\r\n\t\t\t//this conditional ensures only the last recursive m.module call is applied\r\n\t\t\tif (currentModule === topModule) {\r\n\t\t\t\tcontrollers[index] = controller;\r\n\t\t\t\tmodules[index] = module\r\n\t\t\t}\r\n\t\t\tendFirstComputation();\r\n\t\t\treturn controllers[index]\r\n\t\t}\r\n\t};\r\n\tm.redraw = function(force) {\r\n\t\t//lastRedrawId is a positive number if a second redraw is requested before the next animation frame\r\n\t\t//lastRedrawID is null if it's the first redraw and not an event handler\r\n\t\tif (lastRedrawId && force !== true) {\r\n\t\t\t//when setTimeout: only reschedule redraw if time between now and previous redraw is bigger than a frame, otherwise keep currently scheduled timeout\r\n\t\t\t//when rAF: always reschedule redraw\r\n\t\t\tif (new Date - lastRedrawCallTime > FRAME_BUDGET || $requestAnimationFrame === window.requestAnimationFrame) {\r\n\t\t\t\tif (lastRedrawId > 0) $cancelAnimationFrame(lastRedrawId);\r\n\t\t\t\tlastRedrawId = $requestAnimationFrame(redraw, FRAME_BUDGET)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tredraw();\r\n\t\t\tlastRedrawId = $requestAnimationFrame(function() {lastRedrawId = null}, FRAME_BUDGET)\r\n\t\t}\r\n\t};\r\n\tm.redraw.strategy = m.prop();\r\n\tvar blank = function() {return \"\"}\r\n\tfunction redraw() {\r\n\t\tfor (var i = 0, root; root = roots[i]; i++) {\r\n\t\t\tif (controllers[i]) {\r\n\t\t\t\tm.render(root, modules[i].view ? modules[i].view(controllers[i]) : blank())\r\n\t\t\t}\r\n\t\t}\r\n\t\t//after rendering within a routed context, we need to scroll back to the top, and fetch the document title for history.pushState\r\n\t\tif (computePostRedrawHook) {\r\n\t\t\tcomputePostRedrawHook();\r\n\t\t\tcomputePostRedrawHook = null\r\n\t\t}\r\n\t\tlastRedrawId = null;\r\n\t\tlastRedrawCallTime = new Date;\r\n\t\tm.redraw.strategy(\"diff\")\r\n\t}\r\n\r\n\tvar pendingRequests = 0;\r\n\tm.startComputation = function() {pendingRequests++};\r\n\tm.endComputation = function() {\r\n\t\tpendingRequests = Math.max(pendingRequests - 1, 0);\r\n\t\tif (pendingRequests === 0) m.redraw()\r\n\t};\r\n\tvar endFirstComputation = function() {\r\n\t\tif (m.redraw.strategy() == \"none\") {\r\n\t\t\tpendingRequests--\r\n\t\t\tm.redraw.strategy(\"diff\")\r\n\t\t}\r\n\t\telse m.endComputation();\r\n\t}\r\n\r\n\tm.withAttr = function(prop, withAttrCallback) {\r\n\t\treturn function(e) {\r\n\t\t\te = e || event;\r\n\t\t\tvar currentTarget = e.currentTarget || this;\r\n\t\t\twithAttrCallback(prop in currentTarget ? currentTarget[prop] : currentTarget.getAttribute(prop))\r\n\t\t}\r\n\t};\r\n\r\n\t//routing\r\n\tvar modes = {pathname: \"\", hash: \"#\", search: \"?\"};\r\n\tvar redirect = function() {}, routeParams, currentRoute;\r\n\tm.route = function() {\r\n\t\t//m.route()\r\n\t\tif (arguments.length === 0) return currentRoute;\r\n\t\t//m.route(el, defaultRoute, routes)\r\n\t\telse if (arguments.length === 3 && type.call(arguments[1]) === STRING) {\r\n\t\t\tvar root = arguments[0], defaultRoute = arguments[1], router = arguments[2];\r\n\t\t\tredirect = function(source) {\r\n\t\t\t\tvar path = currentRoute = normalizeRoute(source);\r\n\t\t\t\tif (!routeByValue(root, router, path)) {\r\n\t\t\t\t\tm.route(defaultRoute, true)\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar listener = m.route.mode === \"hash\" ? \"onhashchange\" : \"onpopstate\";\r\n\t\t\twindow[listener] = function() {\r\n\t\t\t\tvar path = $location[m.route.mode]\r\n\t\t\t\tif (m.route.mode === \"pathname\") path += $location.search\r\n\t\t\t\tif (currentRoute != normalizeRoute(path)) {\r\n\t\t\t\t\tredirect(path)\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tcomputePostRedrawHook = setScroll;\r\n\t\t\twindow[listener]()\r\n\t\t}\r\n\t\t//config: m.route\r\n\t\telse if (arguments[0].addEventListener || arguments[0].attachEvent) {\r\n\t\t\tvar element = arguments[0];\r\n\t\t\tvar isInitialized = arguments[1];\r\n\t\t\tvar context = arguments[2];\r\n\t\t\telement.href = (m.route.mode !== 'pathname' ? $location.pathname : '') + modes[m.route.mode] + this.attrs.href;\r\n\t\t\tif (element.addEventListener) {\r\n\t\t\t\telement.removeEventListener(\"click\", routeUnobtrusive);\r\n\t\t\t\telement.addEventListener(\"click\", routeUnobtrusive)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.detachEvent(\"onclick\", routeUnobtrusive);\r\n\t\t\t\telement.attachEvent(\"onclick\", routeUnobtrusive)\r\n\t\t\t}\r\n\t\t}\r\n\t\t//m.route(route, params)\r\n\t\telse if (type.call(arguments[0]) === STRING) {\r\n\t\t\tvar oldRoute = currentRoute;\r\n\t\t\tcurrentRoute = arguments[0];\r\n\t\t\tvar args = arguments[1] || {}\r\n\t\t\tvar queryIndex = currentRoute.indexOf(\"?\")\r\n\t\t\tvar params = queryIndex > -1 ? parseQueryString(currentRoute.slice(queryIndex + 1)) : {}\r\n\t\t\tfor (var i in args) params[i] = args[i]\r\n\t\t\tvar querystring = buildQueryString(params)\r\n\t\t\tvar currentPath = queryIndex > -1 ? currentRoute.slice(0, queryIndex) : currentRoute\r\n\t\t\tif (querystring) currentRoute = currentPath + (currentPath.indexOf(\"?\") === -1 ? \"?\" : \"&\") + querystring;\r\n\r\n\t\t\tvar shouldReplaceHistoryEntry = (arguments.length === 3 ? arguments[2] : arguments[1]) === true || oldRoute === arguments[0];\r\n\r\n\t\t\tif (window.history.pushState) {\r\n\t\t\t\tcomputePostRedrawHook = function() {\r\n\t\t\t\t\twindow.history[shouldReplaceHistoryEntry ? \"replaceState\" : \"pushState\"](null, $document.title, modes[m.route.mode] + currentRoute);\r\n\t\t\t\t\tsetScroll()\r\n\t\t\t\t};\r\n\t\t\t\tredirect(modes[m.route.mode] + currentRoute)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$location[m.route.mode] = currentRoute\r\n\t\t\t\tredirect(modes[m.route.mode] + currentRoute)\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tm.route.param = function(key) {\r\n\t\tif (!routeParams) throw new Error(\"You must call m.route(element, defaultRoute, routes) before calling m.route.param()\")\r\n\t\treturn routeParams[key]\r\n\t};\r\n\tm.route.mode = \"search\";\r\n\tfunction normalizeRoute(route) {\r\n\t\treturn route.slice(modes[m.route.mode].length)\r\n\t}\r\n\tfunction routeByValue(root, router, path) {\r\n\t\trouteParams = {};\r\n\r\n\t\tvar queryStart = path.indexOf(\"?\");\r\n\t\tif (queryStart !== -1) {\r\n\t\t\trouteParams = parseQueryString(path.substr(queryStart + 1, path.length));\r\n\t\t\tpath = path.substr(0, queryStart)\r\n\t\t}\r\n\r\n\t\t// Get all routes and check if there's\r\n\t\t// an exact match for the current path\r\n\t\tvar keys = Object.keys(router);\r\n\t\tvar index = keys.indexOf(path);\r\n\t\tif(index !== -1){\r\n\t\t\tm.module(root, router[keys [index]]);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfor (var route in router) {\r\n\t\t\tif (route === path) {\r\n\t\t\t\tm.module(root, router[route]);\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\r\n\t\t\tvar matcher = new RegExp(\"^\" + route.replace(/:[^\\/]+?\\.{3}/g, \"(.*?)\").replace(/:[^\\/]+/g, \"([^\\\\/]+)\") + \"\\/?$\");\r\n\r\n\t\t\tif (matcher.test(path)) {\r\n\t\t\t\tpath.replace(matcher, function() {\r\n\t\t\t\t\tvar keys = route.match(/:[^\\/]+/g) || [];\r\n\t\t\t\t\tvar values = [].slice.call(arguments, 1, -2);\r\n\t\t\t\t\tfor (var i = 0, len = keys.length; i < len; i++) routeParams[keys[i].replace(/:|\\./g, \"\")] = decodeURIComponent(values[i])\r\n\t\t\t\t\tm.module(root, router[route])\r\n\t\t\t\t});\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction routeUnobtrusive(e) {\r\n\t\te = e || event;\r\n\t\tif (e.ctrlKey || e.metaKey || e.which === 2) return;\r\n\t\tif (e.preventDefault) e.preventDefault();\r\n\t\telse e.returnValue = false;\r\n\t\tvar currentTarget = e.currentTarget || e.srcElement;\r\n\t\tvar args = m.route.mode === \"pathname\" && currentTarget.search ? parseQueryString(currentTarget.search.slice(1)) : {};\r\n\t\twhile (currentTarget && currentTarget.nodeName.toUpperCase() != \"A\") currentTarget = currentTarget.parentNode\r\n\t\tm.route(currentTarget[m.route.mode].slice(modes[m.route.mode].length), args)\r\n\t}\r\n\tfunction setScroll() {\r\n\t\tif (m.route.mode != \"hash\" && $location.hash) $location.hash = $location.hash;\r\n\t\telse window.scrollTo(0, 0)\r\n\t}\r\n\tfunction buildQueryString(object, prefix) {\r\n\t\tvar duplicates = {}\r\n\t\tvar str = []\r\n\t\tfor (var prop in object) {\r\n\t\t\tvar key = prefix ? prefix + \"[\" + prop + \"]\" : prop\r\n\t\t\tvar value = object[prop]\r\n\t\t\tvar valueType = type.call(value)\r\n\t\t\tvar pair = (value === null) ? encodeURIComponent(key) :\r\n\t\t\t\tvalueType === OBJECT ? buildQueryString(value, key) :\r\n\t\t\t\tvalueType === ARRAY ? value.reduce(function(memo, item) {\r\n\t\t\t\t\tif (!duplicates[key]) duplicates[key] = {}\r\n\t\t\t\t\tif (!duplicates[key][item]) {\r\n\t\t\t\t\t\tduplicates[key][item] = true\r\n\t\t\t\t\t\treturn memo.concat(encodeURIComponent(key) + \"=\" + encodeURIComponent(item))\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn memo\r\n\t\t\t\t}, []).join(\"&\") :\r\n\t\t\t\tencodeURIComponent(key) + \"=\" + encodeURIComponent(value)\r\n\t\t\tif (value !== undefined) str.push(pair)\r\n\t\t}\r\n\t\treturn str.join(\"&\")\r\n\t}\r\n\tfunction parseQueryString(str) {\r\n\t\tvar pairs = str.split(\"&\"), params = {};\r\n\t\tfor (var i = 0, len = pairs.length; i < len; i++) {\r\n\t\t\tvar pair = pairs[i].split(\"=\");\r\n\t\t\tvar key = decodeURIComponent(pair[0])\r\n\t\t\tvar value = pair.length == 2 ? decodeURIComponent(pair[1]) : null\r\n\t\t\tif (params[key] != null) {\r\n\t\t\t\tif (type.call(params[key]) !== ARRAY) params[key] = [params[key]]\r\n\t\t\t\tparams[key].push(value)\r\n\t\t\t}\r\n\t\t\telse params[key] = value\r\n\t\t}\r\n\t\treturn params\r\n\t}\r\n\tm.route.buildQueryString = buildQueryString\r\n\tm.route.parseQueryString = parseQueryString\r\n\t\r\n\tfunction reset(root) {\r\n\t\tvar cacheKey = getCellCacheKey(root);\r\n\t\tclear(root.childNodes, cellCache[cacheKey]);\r\n\t\tcellCache[cacheKey] = undefined\r\n\t}\r\n\r\n\tm.deferred = function () {\r\n\t\tvar deferred = new Deferred();\r\n\t\tdeferred.promise = propify(deferred.promise);\r\n\t\treturn deferred\r\n\t};\r\n\tfunction propify(promise, initialValue) {\r\n\t\tvar prop = m.prop(initialValue);\r\n\t\tpromise.then(prop);\r\n\t\tprop.then = function(resolve, reject) {\r\n\t\t\treturn propify(promise.then(resolve, reject), initialValue)\r\n\t\t};\r\n\t\treturn prop\r\n\t}\r\n\t//Promiz.mithril.js | Zolmeister | MIT\r\n\t//a modified version of Promiz.js, which does not conform to Promises/A+ for two reasons:\r\n\t//1) `then` callbacks are called synchronously (because setTimeout is too slow, and the setImmediate polyfill is too big\r\n\t//2) throwing subclasses of Error cause the error to be bubbled up instead of triggering rejection (because the spec does not account for the important use case of default browser error handling, i.e. message w/ line number)\r\n\tfunction Deferred(successCallback, failureCallback) {\r\n\t\tvar RESOLVING = 1, REJECTING = 2, RESOLVED = 3, REJECTED = 4;\r\n\t\tvar self = this, state = 0, promiseValue = 0, next = [];\r\n\r\n\t\tself[\"promise\"] = {};\r\n\r\n\t\tself[\"resolve\"] = function(value) {\r\n\t\t\tif (!state) {\r\n\t\t\t\tpromiseValue = value;\r\n\t\t\t\tstate = RESOLVING;\r\n\r\n\t\t\t\tfire()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t};\r\n\r\n\t\tself[\"reject\"] = function(value) {\r\n\t\t\tif (!state) {\r\n\t\t\t\tpromiseValue = value;\r\n\t\t\t\tstate = REJECTING;\r\n\r\n\t\t\t\tfire()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t};\r\n\r\n\t\tself.promise[\"then\"] = function(successCallback, failureCallback) {\r\n\t\t\tvar deferred = new Deferred(successCallback, failureCallback);\r\n\t\t\tif (state === RESOLVED) {\r\n\t\t\t\tdeferred.resolve(promiseValue)\r\n\t\t\t}\r\n\t\t\telse if (state === REJECTED) {\r\n\t\t\t\tdeferred.reject(promiseValue)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnext.push(deferred)\r\n\t\t\t}\r\n\t\t\treturn deferred.promise\r\n\t\t};\r\n\r\n\t\tfunction finish(type) {\r\n\t\t\tstate = type || REJECTED;\r\n\t\t\tnext.map(function(deferred) {\r\n\t\t\t\tstate === RESOLVED && deferred.resolve(promiseValue) || deferred.reject(promiseValue)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction thennable(then, successCallback, failureCallback, notThennableCallback) {\r\n\t\t\tif (((promiseValue != null && type.call(promiseValue) === OBJECT) || typeof promiseValue === FUNCTION) && typeof then === FUNCTION) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// count protects against abuse calls from spec checker\r\n\t\t\t\t\tvar count = 0;\r\n\t\t\t\t\tthen.call(promiseValue, function(value) {\r\n\t\t\t\t\t\tif (count++) return;\r\n\t\t\t\t\t\tpromiseValue = value;\r\n\t\t\t\t\t\tsuccessCallback()\r\n\t\t\t\t\t}, function (value) {\r\n\t\t\t\t\t\tif (count++) return;\r\n\t\t\t\t\t\tpromiseValue = value;\r\n\t\t\t\t\t\tfailureCallback()\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tm.deferred.onerror(e);\r\n\t\t\t\t\tpromiseValue = e;\r\n\t\t\t\t\tfailureCallback()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnotThennableCallback()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction fire() {\r\n\t\t\t// check if it's a thenable\r\n\t\t\tvar then;\r\n\t\t\ttry {\r\n\t\t\t\tthen = promiseValue && promiseValue.then\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tm.deferred.onerror(e);\r\n\t\t\t\tpromiseValue = e;\r\n\t\t\t\tstate = REJECTING;\r\n\t\t\t\treturn fire()\r\n\t\t\t}\r\n\t\t\tthennable(then, function() {\r\n\t\t\t\tstate = RESOLVING;\r\n\t\t\t\tfire()\r\n\t\t\t}, function() {\r\n\t\t\t\tstate = REJECTING;\r\n\t\t\t\tfire()\r\n\t\t\t}, function() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (state === RESOLVING && typeof successCallback === FUNCTION) {\r\n\t\t\t\t\t\tpromiseValue = successCallback(promiseValue)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (state === REJECTING && typeof failureCallback === \"function\") {\r\n\t\t\t\t\t\tpromiseValue = failureCallback(promiseValue);\r\n\t\t\t\t\t\tstate = RESOLVING\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tm.deferred.onerror(e);\r\n\t\t\t\t\tpromiseValue = e;\r\n\t\t\t\t\treturn finish()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (promiseValue === self) {\r\n\t\t\t\t\tpromiseValue = TypeError();\r\n\t\t\t\t\tfinish()\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthennable(then, function () {\r\n\t\t\t\t\t\tfinish(RESOLVED)\r\n\t\t\t\t\t}, finish, function () {\r\n\t\t\t\t\t\tfinish(state === RESOLVING && RESOLVED)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tm.deferred.onerror = function(e) {\r\n\t\tif (type.call(e) === \"[object Error]\" && !e.constructor.toString().match(/ Error/)) throw e\r\n\t};\r\n\r\n\tm.sync = function(args) {\r\n\t\tvar method = \"resolve\";\r\n\t\tfunction synchronizer(pos, resolved) {\r\n\t\t\treturn function(value) {\r\n\t\t\t\tresults[pos] = value;\r\n\t\t\t\tif (!resolved) method = \"reject\";\r\n\t\t\t\tif (--outstanding === 0) {\r\n\t\t\t\t\tdeferred.promise(results);\r\n\t\t\t\t\tdeferred[method](results)\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar deferred = m.deferred();\r\n\t\tvar outstanding = args.length;\r\n\t\tvar results = new Array(outstanding);\r\n\t\tif (args.length > 0) {\r\n\t\t\tfor (var i = 0; i < args.length; i++) {\r\n\t\t\t\targs[i].then(synchronizer(i, true), synchronizer(i, false))\r\n\t\t\t}\r\n\t\t}\r\n\t\telse deferred.resolve([]);\r\n\r\n\t\treturn deferred.promise\r\n\t};\r\n\tfunction identity(value) {return value}\r\n\r\n\tfunction ajax(options) {\r\n\t\tif (options.dataType && options.dataType.toLowerCase() === \"jsonp\") {\r\n\t\t\tvar callbackKey = \"mithril_callback_\" + new Date().getTime() + \"_\" + (Math.round(Math.random() * 1e16)).toString(36);\r\n\t\t\tvar script = $document.createElement(\"script\");\r\n\r\n\t\t\twindow[callbackKey] = function(resp) {\r\n\t\t\t\tscript.parentNode.removeChild(script);\r\n\t\t\t\toptions.onload({\r\n\t\t\t\t\ttype: \"load\",\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tresponseText: resp\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\twindow[callbackKey] = undefined\r\n\t\t\t};\r\n\r\n\t\t\tscript.onerror = function(e) {\r\n\t\t\t\tscript.parentNode.removeChild(script);\r\n\r\n\t\t\t\toptions.onerror({\r\n\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tstatus: 500,\r\n\t\t\t\t\t\tresponseText: JSON.stringify({error: \"Error making jsonp request\"})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\twindow[callbackKey] = undefined;\r\n\r\n\t\t\t\treturn false\r\n\t\t\t};\r\n\r\n\t\t\tscript.onload = function(e) {\r\n\t\t\t\treturn false\r\n\t\t\t};\r\n\r\n\t\t\tscript.src = options.url\r\n\t\t\t\t+ (options.url.indexOf(\"?\") > 0 ? \"&\" : \"?\")\r\n\t\t\t\t+ (options.callbackKey ? options.callbackKey : \"callback\")\r\n\t\t\t\t+ \"=\" + callbackKey\r\n\t\t\t\t+ \"&\" + buildQueryString(options.data || {});\r\n\t\t\t$document.body.appendChild(script)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar xhr = new window.XMLHttpRequest;\r\n\t\t\txhr.open(options.method, options.url, true, options.user, options.password);\r\n\t\t\txhr.onreadystatechange = function() {\r\n\t\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\t\tif (xhr.status >= 200 && xhr.status < 300) options.onload({type: \"load\", target: xhr});\r\n\t\t\t\t\telse options.onerror({type: \"error\", target: xhr})\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (options.serialize === JSON.stringify && options.data && options.method !== \"GET\") {\r\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\r\n\t\t\t}\r\n\t\t\tif (options.deserialize === JSON.parse) {\r\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\");\r\n\t\t\t}\r\n\t\t\tif (typeof options.config === FUNCTION) {\r\n\t\t\t\tvar maybeXhr = options.config(xhr, options);\r\n\t\t\t\tif (maybeXhr != null) xhr = maybeXhr\r\n\t\t\t}\r\n\r\n\t\t\tvar data = options.method === \"GET\" || !options.data ? \"\" : options.data\r\n\t\t\tif (data && (type.call(data) != STRING && data.constructor != window.FormData)) {\r\n\t\t\t\tthrow \"Request data should be either be a string or FormData. Check the `serialize` option in `m.request`\";\r\n\t\t\t}\r\n\t\t\txhr.send(data);\r\n\t\t\treturn xhr\r\n\t\t}\r\n\t}\r\n\tfunction bindData(xhrOptions, data, serialize) {\r\n\t\tif (xhrOptions.method === \"GET\" && xhrOptions.dataType != \"jsonp\") {\r\n\t\t\tvar prefix = xhrOptions.url.indexOf(\"?\") < 0 ? \"?\" : \"&\";\r\n\t\t\tvar querystring = buildQueryString(data);\r\n\t\t\txhrOptions.url = xhrOptions.url + (querystring ? prefix + querystring : \"\")\r\n\t\t}\r\n\t\telse xhrOptions.data = serialize(data);\r\n\t\treturn xhrOptions\r\n\t}\r\n\tfunction parameterizeUrl(url, data) {\r\n\t\tvar tokens = url.match(/:[a-z]\\w+/gi);\r\n\t\tif (tokens && data) {\r\n\t\t\tfor (var i = 0; i < tokens.length; i++) {\r\n\t\t\t\tvar key = tokens[i].slice(1);\r\n\t\t\t\turl = url.replace(tokens[i], data[key]);\r\n\t\t\t\tdelete data[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn url\r\n\t}\r\n\r\n\tm.request = function(xhrOptions) {\r\n\t\tif (xhrOptions.background !== true) m.startComputation();\r\n\t\tvar deferred = new Deferred();\r\n\t\tvar isJSONP = xhrOptions.dataType && xhrOptions.dataType.toLowerCase() === \"jsonp\";\r\n\t\tvar serialize = xhrOptions.serialize = isJSONP ? identity : xhrOptions.serialize || JSON.stringify;\r\n\t\tvar deserialize = xhrOptions.deserialize = isJSONP ? identity : xhrOptions.deserialize || JSON.parse;\r\n\t\tvar extract = xhrOptions.extract || function(xhr) {\r\n\t\t\treturn xhr.responseText.length === 0 && deserialize === JSON.parse ? null : xhr.responseText\r\n\t\t};\r\n\t\txhrOptions.url = parameterizeUrl(xhrOptions.url, xhrOptions.data);\r\n\t\txhrOptions = bindData(xhrOptions, xhrOptions.data, serialize);\r\n\t\txhrOptions.onload = xhrOptions.onerror = function(e) {\r\n\t\t\ttry {\r\n\t\t\t\te = e || event;\r\n\t\t\t\tvar unwrap = (e.type === \"load\" ? xhrOptions.unwrapSuccess : xhrOptions.unwrapError) || identity;\r\n\t\t\t\tvar response = unwrap(deserialize(extract(e.target, xhrOptions)), e.target);\r\n\t\t\t\tif (e.type === \"load\") {\r\n\t\t\t\t\tif (type.call(response) === ARRAY && xhrOptions.type) {\r\n\t\t\t\t\t\tfor (var i = 0; i < response.length; i++) response[i] = new xhrOptions.type(response[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (xhrOptions.type) response = new xhrOptions.type(response)\r\n\t\t\t\t}\r\n\t\t\t\tdeferred[e.type === \"load\" ? \"resolve\" : \"reject\"](response)\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tm.deferred.onerror(e);\r\n\t\t\t\tdeferred.reject(e)\r\n\t\t\t}\r\n\t\t\tif (xhrOptions.background !== true) m.endComputation()\r\n\t\t};\r\n\t\tajax(xhrOptions);\r\n\t\tdeferred.promise = propify(deferred.promise, xhrOptions.initialValue);\r\n\t\treturn deferred.promise\r\n\t};\r\n\r\n\t//testing API\r\n\tm.deps = function(mock) {\r\n\t\tinitialize(window = mock || window);\r\n\t\treturn window;\r\n\t};\r\n\t//for internal testing only, do not use `m.deps.factory`\r\n\tm.deps.factory = app;\r\n\r\n\treturn m\r\n})(typeof window != \"undefined\" ? window : {});\r\n\r\nif (typeof module != \"undefined\" && module !== null && module.exports) module.exports = m;\r\nelse if (typeof define === \"function\" && define.amd) define(function() {return m});\r\n","'use strict';\n\nvar Executor = require('./executor');\n\nfunction Benchmark() {\n  this.running = false;\n  this.impl = null;\n  this.tests = null;\n  this.reportCallback = null;\n\n  this.container = document.createElement('div');\n\n  this._runButton = document.getElementById('RunButton');\n  this._iterationsElement = document.getElementById('Iterations');\n  this._reportElement = document.createElement('pre');\n\n  document.body.appendChild(this.container);\n  document.body.appendChild(this._reportElement);\n\n  var self = this;\n\n  this._runButton.addEventListener('click', function(e) {\n    e.preventDefault();\n\n    if (!self.running) {\n      var iterations = parseInt(self._iterationsElement.value);\n      if (iterations <= 0) {\n        iterations = 10;\n      }\n\n      self.run(iterations);\n    }\n  }, false);\n\n  this.ready(true);\n}\n\nBenchmark.prototype.ready = function(v) {\n  if (v) {\n    this._runButton.disabled = '';\n  } else {\n    this._runButton.disabled = 'true';\n  }\n};\n\nBenchmark.prototype.run = function(iterations) {\n  var self = this;\n  this.running = true;\n  this.ready(false);\n\n  new Executor(self.impl, self.container, self.tests, 1, function() { // warmup\n    new Executor(self.impl, self.container, self.tests, iterations, function(samples) {\n      self._reportElement.textContent = JSON.stringify(samples, null, ' ');\n      self.running = false;\n      self.ready(true);\n      if (self.reportCallback != null) {\n        self.reportCallback(samples);\n      }\n    }).start();\n  }).start();\n};\n\nmodule.exports = Benchmark;\n","'use strict';\n\nfunction Executor(impl, container, tests, iterations, cb, iterCb) {\n  if (iterCb === void 0) iterCb = null;\n\n  this.impl = impl;\n  this.container = container;\n  this.tests = tests;\n  this.iterations = iterations;\n  this.cb = cb;\n  this.iterCb = iterCb;\n\n  this._currentTest = 0;\n  this._currentIter = 0;\n  this._renderSamples = [];\n  this._updateSamples = [];\n  this._result = [];\n\n  this._tasksCount = tests.length * iterations;\n\n  this._iter = this.iter.bind(this);\n}\n\nExecutor.prototype.start = function() {\n  this._iter();\n};\n\nExecutor.prototype.finished = function() {\n  this.cb(this._result);\n};\n\nExecutor.prototype.progress = function() {\n  if (this._currentTest === 0 && this._currentIter === 0) {\n    return 0;\n  }\n\n  var tests = this.tests;\n  return (this._currentTest * tests.length + this._currentIter) / (tests.length * this.iterataions);\n};\n\nExecutor.prototype.iter = function() {\n  if (this.iterCb != null) {\n    this.iterCb(this);\n  }\n\n  var tests = this.tests;\n\n  if (this._currentTest < tests.length) {\n    var test = tests[this._currentTest];\n\n    if (this._currentIter < this.iterations) {\n      var e, t;\n      var renderTime, updateTime;\n\n      e = new this.impl(this.container, test.data.a, test.data.b);\n      e.setUp();\n\n      t = window.performance.now();\n      e.render();\n      renderTime = window.performance.now() - t;\n\n      t = window.performance.now();\n      e.update();\n      updateTime = window.performance.now() - t;\n      e.tearDown();\n\n      this._renderSamples.push(renderTime);\n      this._updateSamples.push(updateTime);\n\n      this._currentIter++;\n    } else {\n      this._result.push({\n        name: test.name + ' ' + 'render()',\n        data: this._renderSamples.slice(0)\n      });\n\n      this._result.push({\n        name: test.name + ' ' + 'update()',\n        data: this._updateSamples.slice(0)\n      });\n\n      this._currentTest++;\n\n      this._currentIter = 0;\n      this._renderSamples = [];\n      this._updateSamples = [];\n    }\n\n    setTimeout(this._iter, 0);\n  } else {\n    this.finished();\n  }\n};\n\nmodule.exports = Executor;\n","'use strict';\n\nvar Benchmark = require('./benchmark');\nvar benchmark = new Benchmark();\n\nfunction initFromScript(scriptUrl, impl) {\n  var e = document.createElement('script');\n  e.src = scriptUrl;\n\n  e.onload = function() {\n    benchmark.tests = window.benchmarkTests();\n    benchmark.ready(true);\n  };\n\n  document.head.appendChild(e);\n}\n\nfunction initFromParentWindow(parent, name, version, id) {\n  window.addEventListener('message', function(e) {\n    var data = e.data;\n    var type = data.type;\n\n    if (type === 'tests') {\n      benchmark.tests = data.data;\n      benchmark.reportCallback = function(samples) {\n        parent.postMessage({\n          type: 'report',\n          data: {\n            name: name,\n            version: version,\n            samples: samples\n          },\n          id: id\n        }, '*');\n      };\n      benchmark.ready(true);\n\n      parent.postMessage({\n        type: 'ready',\n        data: null,\n        id: id\n      }, '*');\n    } else if (type === 'run') {\n      benchmark.run(data.data.iterations);\n    }\n  }, false);\n\n  parent.postMessage({\n    type: 'init',\n    data: null,\n    id: id\n  }, '*');\n}\n\nfunction init(name, version, impl) {\n  // Parse Query String.\n  var qs = (function(a) {\n    if (a == \"\") return {};\n    var b = {};\n    for (var i = 0; i < a.length; ++i) {\n      var p=a[i].split('=', 2);\n      if (p.length == 1) {\n        b[p[0]] = \"\";\n      } else {\n        b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n      }\n    }\n    return b;\n  })(window.location.search.substr(1).split('&'));\n\n  if (qs['name'] !== void 0) {\n    name = qs['name'];\n  }\n\n  if (qs['version'] !== void 0) {\n    version = qs['version'];\n  }\n\n  var type = qs['type'];\n  var id;\n  if (type === 'iframe') {\n    id = qs['id'];\n    if (id === void 0) id = null;\n    initFromParentWindow(window.parent, name, version, id);\n  } else if (type === 'window') {\n    if (window.opener != null) {\n      id = qs['id'];\n      if (id === void 0) id = null;\n      initFromParentWindow(window.opener, name, version, id);\n    } else {\n      console.log('Failed to initialize: opener window is NULL');\n    }\n  } else {\n    var testsUrl = qs['data']; // url to the script generating test data\n    if (testsUrl !== void 0) {\n      initFromScript(testsUrl);\n    } else {\n      console.log('Failed to initialize: cannot load tests data');\n    }\n  }\n\n  benchmark.impl = impl;\n}\n\n// performance.now() polyfill\n// https://gist.github.com/paulirish/5438650\n// prepare base perf object\nif (typeof window.performance === 'undefined') {\n  window.performance = {};\n}\nif (!window.performance.now){\n  var nowOffset = Date.now();\n  if (performance.timing && performance.timing.navigationStart) {\n    nowOffset = performance.timing.navigationStart;\n  }\n  window.performance.now = function now(){\n    return Date.now() - nowOffset;\n  };\n}\n\nmodule.exports = init;\n"],"sourceRoot":"/source/"}